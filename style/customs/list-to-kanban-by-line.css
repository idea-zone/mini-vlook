/*
 * 参考资料：
 * 1. 是在 Zhang-Light 的主题下测试的
*  2. 思路借鉴 Zhang-Light 主题的 列表转表格 功能
 * 3. 列表竖排：https://karthikdevarticles.com/creating-a-kanban-board-with-html-css-and-javascript
 * 4. 安装：在 css 文件中添加 list-to-kanban-by-line.css 的路径 
      @import url(path/to/list-to-kanban-by-line.css);
 * 5. 在列表前有连续两行分割符即可，支持无序列表和有序列表。
 *
 * 制作人: 路人二
 * 版本: V0.0.1-dev
 * 时间: 2022-04-15
 * 更新日志：
 *  1. 完成基本的渲染功能
 */
 
/* -----------------------------------------------列表转化为表格------------------------------------------- */
/* 设置整个列表表格的缩进 */

/* 01-竖向排列的列表-横向排列:在导出的时候，取消竖排，避免导出内容缺失 */ 

:not(#preview).protyle-wysiwyg .list[custom-f~=kb][data-node-id][data-type="NodeList"],
:not(#preview).protyle-wysiwyg .hr:first-child+.hr+.list[data-node-id][data-type="NodeList"],
:not(#preview).protyle-wysiwyg :not(.hr)+.hr+.hr+.list[data-node-id][data-type="NodeList"]
{
    display: flex;
    flex-direction: row;
    justify-content: space-between; 
    max-width: var(--kbline-board-maxwidth);       /*固定宽度*/
}

/* ————————————————————所有子项目的表格（除去第一列其余的列），包含溢出的空白部分，所以才会有边框—————————————————————— */
.protyle-wysiwyg *[custom-f~=kb] .li .list ,
.protyle-wysiwyg .hr:first-child+.hr+* .li .list ,
.protyle-wysiwyg :not(.hr)+.hr+.hr+* .li .list {
    /* outline: var(--kbline-border-normal); */
    padding: 0px;
    padding-right: 15px;
    min-width: var(--kbline-boarditem-minwidth);
    min-height: var(--kbline-boarditem-minHight);
    
    border-radius: var(--kbline-board-border-radius);
    background: var(--v-block-bq-bg-color);
    padding: 0.75em 1em;
    margin-top: 0;
    margin-bottom: 20px;

    transform: translate(-15px, 0);

}

/* ————————————————————对所有子列表项设置格式———————————————————— */
.protyle-wysiwyg *[custom-f~=kb] .li ,
.protyle-wysiwyg .hr:first-child+.hr+* .li ,
.protyle-wysiwyg :not(.hr)+.hr+.hr+* .li {
   
    min-height: var(--kbline-boarditem-minHight);
    outline: var(--kbline-border-normal);
    
    border-radius: var(--kbline-board-border-radius);
    background: var(--v-block-bq-bg-color);
    
    padding: 0.75em 1em;
    margin-top: 0;
    margin-bottom: 20px;

    /* word-break:keep-all;
    white-space: pre-wrap; */
}




/*处理最最外层的边框颜色（整个看板）*/
.protyle-wysiwyg *[custom-f~=kb][data-node-index]:not([data-type="NodeBlockquote"]) > div ,
.protyle-wysiwyg *[custom-f~=kb]:not([data-type="NodeBlockquote"]) > div ,
.protyle-wysiwyg .hr:first-child+.hr+*[data-node-index]:not([data-type="NodeBlockquote"]) > div ,
.protyle-wysiwyg .hr:first-child+.hr+*:not([data-type="NodeBlockquote"]) > div ,
.protyle-wysiwyg :not(.hr)+.hr+.hr+*[data-node-index]:not([data-type="NodeBlockquote"]) > div 
,.protyle-wysiwyg :not(.hr)+.hr+.hr+*:not([data-type="NodeBlockquote"]) > div {
    outline-color: #fcf9f2;
}

/*只处理每个列表的第一行*/
.protyle-wysiwyg *[custom-f~=kb][data-node-index]:not([data-type="NodeBlockquote"]) > div > div:nth-child(2),
.protyle-wysiwyg *[custom-f~=kb]:not([data-type="NodeBlockquote"]) > div > div:nth-child(2),
.protyle-wysiwyg .hr:first-child+.hr+*[data-node-index]:not([data-type="NodeBlockquote"]) > div > div:nth-child(2),
.protyle-wysiwyg .hr:first-child+.hr+*:not([data-type="NodeBlockquote"]) > div > div:nth-child(2),
.protyle-wysiwyg :not(.hr)+.hr+.hr+*[data-node-index]:not([data-type="NodeBlockquote"]) > div > div:nth-child(2)
,.protyle-wysiwyg :not(.hr)+.hr+.hr+*:not([data-type="NodeBlockquote"]) > div > div:nth-child(2){
    min-width: var(--kbline-boarditem-minwidth);

    color: #fff; 
    background-color: var(--kbline-board-title-bg);
    /* background: var(--v-block-bq-bg-color); */
    
    /*居中*/
    display:flex;
    justify-content:center;
    align-items:center;
    outline: var(--kbline-border-normal);
    border-radius: var(--kbline-board-border-radius);

    padding: 0.75em 1em;
    margin-top: 0;
    margin-bottom: 20px;

}

/*只处理每个列表第一行的点*/
.protyle-wysiwyg *[custom-f~=kb][data-node-index]:not([data-type="NodeBlockquote"]) > div > div:nth-child(1),
.protyle-wysiwyg *[custom-f~=kb]:not([data-type="NodeBlockquote"]) > div > div:nth-child(1),
.protyle-wysiwyg .hr:first-child+.hr+*[data-node-index]:not([data-type="NodeBlockquote"]) > div > div:nth-child(1),
.protyle-wysiwyg .hr:first-child+.hr+*:not([data-type="NodeBlockquote"]) > div > div:nth-child(1),
.protyle-wysiwyg :not(.hr)+.hr+.hr+*[data-node-index]:not([data-type="NodeBlockquote"]) > div > div:nth-child(1)
,.protyle-wysiwyg :not(.hr)+.hr+.hr+*:not([data-type="NodeBlockquote"]) > div > div:nth-child(1)
{

    transform: translate(10px, 50%);

    background-color: var(--kbline-board-title-svg-bg);
    border-radius: var(--kbline-board-border-radius);

}

/* ————————————————————大神增加代码———————————————————— */
.protyle-wysiwyg *[custom-f~=kb] [data-node-id].li>[data-node-id] ,
.protyle-wysiwyg .hr:first-child+.hr+* [data-node-id].li>[data-node-id] ,
.protyle-wysiwyg :not(.hr)+.hr+.hr+* [data-node-id].li>[data-node-id] {
    /*右侧出现线条，把第一行的左移动，文本和子列表对齐*/
    margin-left: 30px !important; 
}

/*（效果不好）悬浮在块上的时候有颜色, 会同时高亮选中的所有的 item 而不是单个*/
/* .protyle-wysiwyg *[custom-f~="kb"] .li:hover{
    background-color: var(--kbline-theme-hover2);
} */
/*（勉强还行）悬浮在块上的时候有颜色, 但只高亮文字，而不是全部块*/
.protyle-wysiwyg *[custom-f~=kb] .p:hover,
.protyle-wysiwyg .hr:first-child+.hr+* .p:hover,
.protyle-wysiwyg :not(.hr)+.hr+.hr+* .p:hover{
    background-color: var(--kbline-theme-hover2);
}

/* ————————————————————去除小竖线———————————————————— */
.list[custom-f~=kb][data-node-id][data-type="NodeList"] .li>:before ,
.hr:first-child+.hr+.list[data-node-id][data-type="NodeList"] .li>:before ,
:not(.hr)+.hr+.hr+.list[data-node-id][data-type="NodeList"] .li>:before {
    display: none;
}

/* ————————————————————减小前面符号·的大小———————————————————— */
.list[custom-f~=kb][data-node-id][data-type="NodeList"] .protyle-action ,
.hr:first-child+.hr+.list[data-node-id][data-type="NodeList"] .protyle-action ,
:not(.hr)+.hr+.hr+.list[data-node-id][data-type="NodeList"] .protyle-action {
    color: var(--kbline-theme-primary);
}

.list[custom-f~=kb][data-node-id][data-type="NodeList"] .protyle-action>svg ,
.hr:first-child+.hr+.list[data-node-id][data-type="NodeList"] .protyle-action>svg ,
:not(.hr)+.hr+.hr+.list[data-node-id][data-type="NodeList"] .protyle-action>svg {
    width: 10px;
}

/* 对除了第一层之外的子列表 .protyle-action 移动 */
.protyle-wysiwyg *[custom-f~=kb] .li .list .protyle-action,
.protyle-wysiwyg .hr:first-child+.hr+* .li .list .protyle-action,
.protyle-wysiwyg :not(.hr)+.hr+.hr+* .li .list .protyle-action{

    position: absolute;
    top: 50%;
    transform: translate(12px, -50%);
    width: 20px;
    height: 20px;

    background: var(--v-block-bq-bg-color);
    border-radius: var(--kbline-board-border-radius);
}

/* 对除了第一层之外的子列表 文本 也移动 */
.protyle-wysiwyg *[custom-f~=kb] .li .list .p+:not(.list) ,
.protyle-wysiwyg .hr:first-child+.hr+* .li .list .p+:not(.list) ,
.protyle-wysiwyg :not(.hr)+.hr+.hr+* .li .list .p+:not(.list) {
    
    position: absolute;
    top: 50%;
    transform: translate(-12px, -50%);

    word-break: break-all;
}


/* 去掉多余的边框*/
.protyle-wysiwyg *[custom-f~=kb] .list,
.protyle-wysiwyg .hr:first-child+.hr+* .list,
.protyle-wysiwyg :not(.hr)+.hr+.hr+* .list{
    outline: none !important;
}


/*------------------解决文字跨行时，上面一行间距很宽的问题------------------------*/
.protyle-wysiwyg *[custom-f~=kb] .p  > div,
.protyle-wysiwyg .hr:first-child+.hr+* .p  > div,
.protyle-wysiwyg :not(.hr)+.hr+.hr+* .p  > div{
    word-break: break-all;
}

/* ---------------------------------------------------------列表转化为表格 END-------------------------------------------------- */
